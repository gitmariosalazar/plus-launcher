services:
  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - '${GATEWAY_SERVER_PORT_DEVELOPMENT}:${GATEWAY_SERVER_PORT_DEVELOPMENT}'
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - ./client-gateway/.env
    networks:
      - plus-network

  security-ms:
    build:
      context: ./security
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - '${SECURITY_SERVER_PORT_DEVELOPMENT}:${SECURITY_SERVER_PORT_DEVELOPMENT}'
    volumes:
      - ./security/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - ./security/.env
    networks:
      - plus-network

  notifications-ms:
    build:
      context: ./notifications
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - '${NOTIFICATION_SERVER_PORT_DEVELOPMENT}:${NOTIFICATION_SERVER_PORT_DEVELOPMENT}'
    volumes:
      - ./notifications/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - ./notifications/.env
    networks:
      - plus-network

  docs-ms:
    build:
      context: ./docs
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - '${DOCUMENTS_SERVER_PORT_DEVELOPMENT}:${DOCUMENTS_SERVER_PORT_DEVELOPMENT}'
    volumes:
      - ./docs/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - ./docs/.env
    networks:
      - plus-network

networks:
  plus-network:
    external: true
